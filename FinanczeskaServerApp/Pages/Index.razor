@page "/"

@using FinanczeskaServerApp.Services;
@inject JsonDataSerializer _jsonDataSerializer;
@inject ChatHistoryService _chatHistoryService;
@inject IHttpContextAccessor _httpContextAccessor;

<body>
  <div class="container">
    <div class="row">


      <section class="discussions">
        <div class="discussion search">

        </div>



        <div class="discussion message-active">
          <div class="desc-contact">
            <p class="name">Megan Leib</p>
          </div>
          <div class="timer">12 sec</div>
        </div>


      </section>
      <section class="chat">

        <div class="messages-chat">
          <div class="message">

            <p class="text"> Hi, how are you ? </p>
          </div>

          <div class="message text-only">
            <div class="response">
              <p class="text"> When can we meet ?</p>
            </div>
          </div>
        </div>
        <div class="footer-chat">
          <i class="icon fa fa-smile-o clickable" style="font-size:25pt;" aria-hidden="true"></i>
      @*     <input type="text" class="write-message" placeholder="Type your message here"></input> *@
          <i class="icon send fa fa-paper-plane-o clickable" aria-hidden="true"></i>
        </div>
      </section>
    </div>
  </div>
</body>


@code {
    private string text = "";
    List<string> chats = new List<string>() { "Test1", "Test2", "Test3" };

    protected override async Task OnInitializedAsync()
    {
        // string? clientIP = _httpContextAccessor.HttpContext?.Connection.RemoteIpAddress?.ToString();
        // if (clientIP.Equals("::1"))
        //     clientIP = "localhost";
        // chats = _chatHistoryService.GetUserChatList(clientIP);
    }

    protected override void OnAfterRender(bool firstRender)
    {
        try
        {
            // string? clientIP = _httpContextAccessor.HttpContext?.Connection.RemoteIpAddress?.ToString();
            // if (clientIP.Equals("::1"))
            //     clientIP = "localhost";
            // chats = _chatHistoryService.GetUserChatList(clientIP);

            // execute conditionally for loading data, otherwise this will load
            // every time the page refreshes
            if (firstRender)
            {
                // Do work to load page data and set properties
            }
        }
        catch(Exception ex)
        {
            
        }

    }

    private void Submit()
    {
        string? clientIP = _httpContextAccessor.HttpContext?.Connection.RemoteIpAddress?.ToString();
        if (clientIP == null)
            clientIP = "undefinded";

        var t = _jsonDataSerializer.SerializeToJson(clientIP, text);
        
    }

}